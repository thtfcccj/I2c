/***********************************************************************

                   I2c管理器实现
此模块负责管理底层硬件并提供软件接口
此模块应用无相关
***********************************************************************/
#ifndef __I2C_MNG_H
#define	__I2C_MNG_H

/***********************************************************************
		                      说明
***********************************************************************/
//此模块整合管理I2cDev，并提供i2cid, 支持波特率的读写

/***********************************************************************
		                      相关配置
***********************************************************************/

//定义支持的I2C串口总数,最多支持6个
#ifndef  I2C_COUNT
  #define I2C_COUNT  1 //只有一个
#endif

/***********************************************************************
		                      相关结构
***********************************************************************/
#include "I2cDev.h"


//每个I2c的信息结构
struct _I2cInfo{
  unsigned short BuadK;          //波特率，K为单位
};

//每个I2c资源
struct _I2c{
  struct _I2cInfo    Info;   //信息结构
  struct _I2cDev     Dev;    //底层设备
};

//管理器
struct _I2cMng{
  struct _I2c I2c[I2C_COUNT];   //实例化，上层通过ID调用
};

extern struct _I2cMng I2cMng; //单例模式

/******************************************************************************
		                      相关函数-主行为相关
******************************************************************************/

//--------------------------------初始化函数---------------------------------
void  I2cMng_Init(signed char IsInited);

//---------------------------由ID得到I2c相关指针相关--------------------------
//主结构
#define I2cMng_pGetI2c(i2cid)      (&I2cMng.I2c[i2cid])
//I2cDev
#define I2cMng_pGetI2cDev(i2cid)   (&I2cMng.I2c[i2cid].Dev)
//I2cInfo
#define I2cMng_pGetInfo(i2cid)  (&I2cMng.I2c[i2cid].Info)
      
//---------------------保存I2cInfo成员至EEPROM函数----------------------------
//调用此函数前请更新数据,并将内存数据保存至EEPROM
void I2cMng_SaveInfo(unsigned char I2cId,
                       unsigned char StructOffset, //struct_offset()得到偏移
                       unsigned char Len);

//---------------------从EEPROM中读取参数函数----------------------------
//此函数用于读取修改系统参数后会引起内存问题的参数,不修改内存值
unsigned char I2cMng_GetInfoFromEeprom(unsigned char I2cId,
                                         unsigned char StructOffset); //struct_offset()得到偏移

//---------------------保存I2cInfo成员至EEPROM函数----------------------------
//此函数直接修改EEPROM,不修改内存值，与I2cMng_GetInfoFromEeprom()配套使用
void I2cMng_SaveInfoToEeprom(unsigned char Data,
                               unsigned char I2cId,
                               unsigned char StructOffset); //struct_offset()得到偏移

//---------------------------底层硬件指针到I2cId-----------------------------
//负值表示未找到
signed char I2cMng_Dev2I2cId(const struct _I2cDev *pDev);

/******************************************************************************
		                        回调函数-应用相关
******************************************************************************/
//（暂无）



/******************************************************************************
		                        回调函数-硬件相关
******************************************************************************/

//-------------------------硬件ID到I2cId的查找表---------------------------
extern const unsigned char I2cMng_cbHwId2I2cId[I2C_COUNT];

//---------------------------挂接的底层硬件指针--------------------------------
extern void* const I2cMng_cbHw[I2C_COUNT];

//---------------------------------中断配置接口-------------------------------- 
//下标为I2cId
typedef void(*I2cCfgInt_t)(void);
extern I2cCfgInt_t I2cMng_cbCfgInt[I2C_COUNT];

//--------------------------底层硬件参数更新接口-------------------------------- 
extern void I2cMng_cbUpdateCfg(unsigned char I2cId);


#endif //#define	__I2C_MNG_H









